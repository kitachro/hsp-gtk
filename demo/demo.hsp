#packopt	name	"gtk3demo"
#runtime	"hsp3c"

#const	TRUE	1
#const	FALSE	0
#const	NULL	0

#include "hspinet.as"
#module
#defcfunc u str str_	// shift-jis文字列をutf-8に変換
	from	= str_
	nkfcnv@	ret, from, "Sw"
	return	ret
#global

#include "libgtk-3-0.as"
#include "libgobject-2.0-0.as"
#include "hscallbk.as"
#uselib ""
#func cb_window_destroy ""
#func cb_button_clicked "" int, int
#func cb_cmd_open ""
#func cb_cmd_quit ""

	// init gtk+

	gtk_init	argc, argv

	// set up window

	gtk_window_new	GTK_WINDOW_TOPLEVEL@
	win = stat

	setcallbk			cbwindowdestroy, cb_window_destroy, *on_window_destroy
	g_signal_connect	win, "destroy", varptr( cbwindowdestroy ), 0

	gtk_window_set_title  win, u( "hsp gtk テスト" )
	gtk_widget_set_size_request		win, 200, 200

	// set up vbox

	gtk_vbox_new	FALSE, 2
	vbx	= stat

	// set up menubar

	; menu tree definition
	menu_info  = "<ui>"
	menu_info += "  <menubar name='Menubar'>"
	menu_info += "    <menu action='FileMenu'>"
	menu_info += "      <menuitem action='Open' />"
	menu_info += "      <separator />"
	menu_info += "      <menuitem action='Quit' />"
	menu_info += "    </menu>"
	menu_info += "  </menubar>"
	menu_info += "</ui>"

	; GtkUIManager
	gtk_ui_manager_new
	ui	= stat

	; GtkActionGroup
	gtk_action_group_new	"filemenu"
	actions	= stat

	; set up File menu
	gtk_action_new	"FileMenu", "_File", NULL, NULL
	gtk_action_group_add_action	actions, stat

	; set up Open menu item
	gtk_action_new		"Open", "_Open", "Open an image", GTK_STOCK_OPEN@
	action_file_open	= stat
	setcallbk			cbcmdopen, cb_cmd_open, *cmd_open
	g_signal_connect	action_file_open, "activate", varptr( cbcmdopen ), 0
	gtk_action_group_add_action_with_accel	actions, action_file_open, "<control>O"

	; set up Quit menu item
	gtk_action_new		"Quit", "_Quit", "Quit this program", GTK_STOCK_QUIT@
	action_file_quit	= stat
	setcallbk			cbcmdquit, cb_cmd_quit, *cmd_quit
	g_signal_connect	action_file_quit, "activate", varptr( cbcmdquit ), 0
	gtk_action_group_add_action_with_accel	actions, action_file_quit, "<control>Q"

	; build up menubar
	gtk_ui_manager_insert_action_group	ui, actions, 0
	gtk_ui_manager_add_ui_from_string	ui, varptr( menu_info ), -1, NULL
	gtk_ui_manager_get_accel_group		ui
	gtk_window_add_accel_group			win, stat
	path	= "/Menubar"
	gtk_ui_manager_get_widget			ui, varptr( path )
	menubar	= stat

	// set up scrolled window

	gtk_scrolled_window_new			NULL, NULL
	scw	= stat
	gtk_scrolled_window_set_policy	scw, GTK_POLICY_AUTOMATIC@, GTK_POLICY_AUTOMATIC@

	// set up image

	gtk_image_new_from_file		"cat.jpg"
	img	= stat

	// set up button

	gtk_button_new_with_label	u( "終了" )
	btn	= stat

	setcallbk			cbbuttonclicked, cb_button_clicked, *on_button_clicked
	g_signal_connect	btn, "clicked", varptr( cbbuttonclicked ), 0

	// build up gui

	gtk_container_add	win, vbx
	gtk_box_pack_start	vbx, menubar, FALSE, FALSE, 0
	gtk_box_pack_start	vbx, scw, TRUE, TRUE, 0
	gtk_scrolled_window_add_with_viewport	scw, img
	gtk_box_pack_start	vbx, btn, FALSE, FALSE, 0

	// start app

	gtk_widget_show_all		win
	gtk_main
	end

*on_window_destroy
	gtk_main_quit
	return

*on_button_clicked
	gtk_main_quit
	return

*cmd_open
	gtk_window_set_title  win, "cmd_open"
	return

*cmd_quit
	gtk_main_quit
	return
