// コールバック関数を使うための準備
#include "hscallbk.as"
#uselib ""
#func cb_win_delete_event ""
#func cb_btn_clicked ""

// GTK+の関数を使うための準備
#uselib "libgtk-3-0.dll"
#func global gtk_init "gtk_init" sptr, sptr
#func global gtk_settings_get_default "gtk_settings_get_default"
#func global gtk_settings_set_string_property "gtk_settings_set_string_property" sptr, sptr, sptr, sptr
#func global gtk_window_new "gtk_window_new" int
#const	GTK_WINDOW_TOPLEVEL	0
#func global gtk_container_add "gtk_container_add" sptr, sptr
#func global gtk_widget_show_all "gtk_widget_show_all" sptr
#func global gtk_main "gtk_main"
#func global gtk_main_quit "gtk_main_quit"
#func global gtk_button_new_with_label "gtk_button_new_with_label" sptr
#func global gtk_color_chooser_dialog_new "gtk_color_chooser_dialog_new" sptr, sptr
#func global gtk_color_chooser_get_rgba "gtk_color_chooser_get_rgba" sptr, sptr
#func global gtk_dialog_run "gtk_dialog_run" sptr
#func global gtk_widget_hide "gtk_widget_hide" sptr
; GtkResponseType
;#const GTK_RESPONSE_DELETE_EVENT -4
#const GTK_RESPONSE_OK           -5
;#const GTK_RESPONSE_CANCEL       -6

#uselib "libgdk-3-0.dll"
#func global gdk_rgba_to_string "gdk_rgba_to_string" sptr

#uselib "libgobject-2.0-0.dll"
#func global g_signal_connect_data "g_signal_connect_data" sptr, str, sptr, sptr, int, int
#define g_signal_connect(%1, %2, %3, %4) g_signal_connect_data %1, %2, %3, %4, 0, 0

// よく使う定数
; ヌルポインタ
#const	NULL	0
; 真偽値
#const	FALSE	0
#const	TRUE	1

	// GTK+初期化
	gtk_init	NULL, NULL

	// GTK+のデフォルトGUIフォントを変更
	gtk_settings_get_default
	gtk_settings_set_string_property	stat, "gtk-font-name", "ms ui gothic, 10", NULL

	// ウィンドウ生成
	gtk_window_new	GTK_WINDOW_TOPLEVEL
	win	= stat
	setcallbk	cbwindeleteevent, cb_win_delete_event, *on_win_delete_event
	g_signal_connect	win, "delete-event", varptr( cbwindeleteevent ), NULL

	// ボタン生成
	gtk_button_new_with_label	"Show Dialog"
	btn	= stat
	setcallbk	cbbtnclicked, cb_btn_clicked, *on_btn_clicked
	g_signal_connect	btn, "clicked", varptr( cbbtnclicked ), 0

	// ウィンドウの組み立て
	gtk_container_add	win, btn

	// ウィンドウの表示とメインループの開始
	gtk_widget_show_all	win
	gtk_main
	end

/* シグナルハンドラ */
*on_win_delete_event
	gtk_main_quit
	return

*on_btn_clicked
	if dlg = NULL {
		gtk_color_chooser_dialog_new	"ColorChooserDialog", win
		dlg	= stat
	}
	gtk_dialog_run	dlg
	response	= stat
	mes "response id: " + response
	gtk_widget_hide	dlg
	if response = GTK_RESPONSE_OK {
		sdim	rgba, 32
		gtk_color_chooser_get_rgba	dlg, rgba
		gdk_rgba_to_string	rgba
		dupptr	str_rgba, stat, 100, 2
		mes	"color: " + str_rgba
	}
	return
