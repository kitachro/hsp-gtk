#const	FALSE	0
#const	TRUE	1

#include "hspinet.as"
#module
#defcfunc u str chars_	// shift-jis文字列をutf-8に変換
	chars	= chars_
	nkfcnv@	chars, chars, "Sw"
	return	chars
#global

#include "hscallbk.as"
#uselib ""
#func cb_window_delete_event ""
#func cb_button1_clicked ""
#func cb_button2_clicked ""
#func cb_button3_clicked ""

#uselib "libgtk-3-0.dll"
#func global gtk_init "gtk_init" sptr, sptr
#func global gtk_window_new "gtk_window_new" int
#const	GTK_WINDOW_TOPLEVEL	0
#func global gtk_window_set_title "gtk_window_set_title" sptr, sptr
#func global gtk_container_add "gtk_container_add" sptr, sptr
#func global gtk_container_set_border_width "gtk_container_set_border_width" sptr, int
#func global gtk_widget_show_all "gtk_widget_show_all" sptr
#func global gtk_main "gtk_main"
#func global gtk_main_quit "gtk_main_quit"
#func global gtk_hbox_new "gtk_hbox_new" int, int
#func global gtk_button_new_with_label "gtk_button_new_with_label" sptr
#func global gtk_button_new_from_stock "gtk_button_new_from_stock" sptr
#func global gtk_button_new_with_mnemonic "gtk_button_new_with_mnemonic" sptr 
#define GTK_STOCK_OPEN	"gtk-open"
#func global gtk_box_pack_start "gtk_box_pack_start" sptr, sptr, int, int, int

#uselib "libgobject-2.0-0.dll"
#define g_signal_connect(%1, %2, %3, %4) g_signal_connect_data %1, %2, %3, %4, 0, 0
#func global g_signal_connect_data "g_signal_connect_data" sptr, str, sptr, sptr, int, int

	gtk_init	0, 0

	// set up window
	gtk_window_new	GTK_WINDOW_TOPLEVEL
	win	= stat
	gtk_window_set_title	win, u( "ボタン デモ" )
	gtk_container_set_border_width	win, 10
	setcallbk	cbwindowdeleteevent, cb_window_delete_event, *on_window_delete_event
	g_signal_connect	win, "delete-event", varptr( cbwindowdeleteevent ), 0

	// set up hbox
	gtk_hbox_new	FALSE, 6
	hbox	= stat

	// set up buttons
	gtk_button_new_with_label	u( "クリック！" )
	btn1	= stat
	setcallbk	cbbutton1clicked, cb_button1_clicked, *on_button1_clicked
	g_signal_connect	btn1, "clicked", varptr( cbbutton1clicked ), 0

	gtk_button_new_from_stock	GTK_STOCK_OPEN
	btn2	= stat
	setcallbk	cbbutton2clicked, cb_button2_clicked, *on_button2_clicked
	g_signal_connect	btn2, "clicked", varptr( cbbutton2clicked ), 0

	gtk_button_new_with_mnemonic	"_Close"
	btn3	= stat
	setcallbk	cbbutton3clicked, cb_button3_clicked, *on_button3_clicked
	g_signal_connect	btn3, "clicked", varptr( cbbutton3clicked ), 0

	// build up gui
	gtk_box_pack_start	hbox, btn1, TRUE, TRUE, 0
	gtk_box_pack_start	hbox, btn2, TRUE, TRUE, 0
	gtk_box_pack_start	hbox, btn3, TRUE, TRUE, 0
	gtk_container_add	win, hbox

	// start app
	gtk_widget_show_all	win
	gtk_main
	end

*on_window_delete_event
	gtk_main_quit
	return

*on_button1_clicked
	mes	"\"クリック！\" ボタンがクリックされました。"
	return

*on_button2_clicked
	mes	"\"Open\" ボタンがクリックされました。"
	return

*on_button3_clicked
	dialog	"\"Close\" ボタンがクリックされました。"
	gtk_main_quit
	return
